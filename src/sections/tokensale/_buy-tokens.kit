<section class="container section-create-sale">
  <form>
    <div class="row center">
      <div class="col-12">
        <h1>Buy Token - Ethereum ERC20</h1>
        <p>Buy a ERC20 compliant token from a sale.</p>
      </div>
    </div>
    <div class="row center">
      <div class="col-8 offset-2">
        <div class="field-with-helper">
          <label for="ether_to_send">Ether to Send (0 Places)</label>
          <input name="ether_to_send" id="ether_to_send" type="number" value="0.01" />
          <span class="helper-box" data-toggle="popover" data-trigger="manual" title="Ether to Send" data-placement="left" data-content=""></span>
        </div>
      </div>
    </div>
    <div class="row center">
      <div class="offset-3 col-6">
        <span class="error-message"></span>
      </div>
    </div>
    <div class="row center">
      <div class="offset-3 col-6">
        <button class="send_ether" type="button">Send Ether</button>
      </div>
    </div>
  </form>
</section>

<script>
  $(document).ready(() => {
    let section = $(".section-create-sale");
    section.find(".send_ether").click(function() {
      var client = new XYClient(function(client) {
        var section = $(".section-create-sale");
        var etherToSend = section.find("[name='ether_to_send']").val();

        try {
          var contractFile = '/contracts/' + client.config.saleContractName + '.json';
          let contract = new XYContract(contractFile, (contract) => {
            try {
              let instance = contract.getInstance(client.getWeb3(), client.config.saleAddress);
              var params = {
                from: client.getDAppAddress(),
                to: client.config.saleAddress,
                gasPrice: 10000000000,
                gas: 2000000,
                value: web3.toWei(etherToSend, 'ether')
              }

              instance.purchase(params, (error, result) => {
                if (error) {
                  console.error(error);
                } else {
                  console.log(result);
                }
              });
            } catch (ex) {
              $(".error-message").text(ex.message);
              console.error(ex);
            }
          });
          /*var params = {from: client.getDAppAddress(), to: client.config.saleAddress, gasPrice: 10000000000, gas: 2000000, value: web3.toWei(etherToSend, 'ether')};
          console.log("Params: " + JSON.stringify(params));
          client.getWeb3().eth.sendTransaction(
            params,
            (error, result) => {
              if (error) {
                console.error(error);
              } else {
                console.log("Result: " + result);
              }
          });*/
        } catch (ex) {
          $(".error-message").text(ex.message);
          console.error(ex);
        }

      });
    });
    var client = new XYClient(function(client) {
      section.find("[name='token_address']").val(client.config.tokenAddress);
      section.find("[name='start_time']").val(1521529200000);
      section.find("[name='end_time']").val(1526799600000);
    });
  });
</script>