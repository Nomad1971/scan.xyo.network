<section class="container section-predict-tokens" style="background:#f1f1f1;margin:10px auto 10px auto;border: 1px #999999 dotted;border-radius:2px;">
  <form>
    <div class="row center">
      <div class="col-12">
        <h1>Predict Tokens</h1>
        <p>Predict how many tokens you would get for a certain number of ETH</p>
      </div>
    </div>
    <div class="row center">
      <div class="col-8 offset-2">
        <div class="field-with-helper">
          <label for="ether_to_send">Ether to Send (0 Places)</label>
          <input name="ether_to_send" id="ether_to_send" type="number" value="5" />
          <span class="helper-box" data-toggle="popover" data-trigger="manual" title="Ether To Send" data-placement="left" data-content=""></span>
        </div>
      </div>
    </div>
    <div class="row center">
      <div class="col-8 offset-2">
        <div class="field-with-helper">
          <label for="tokens_sold">Tokens Sold to Date (0 Places)</label>
          <input name="tokens_sold" id="tokens_sold" type="number" value="2000000000" />
          <span class="helper-box" data-toggle="popover" data-trigger="manual" title="Tokens Sold" data-placement="left" data-content=""></span>
        </div>
      </div>
    </div>
    <div class="row center">
      <div class="col-12">
        <h2>Predicted Tokens: <span class='predicted-tokens'>Unknown</span></h2>
      </div>
    </div>
    <div class="row center">
      <div class="offset-3 col-6">
        <span class="error-message"></span>
      </div>
    </div>
    <div class="row center">
      <div class="offset-3 col-6">
        <button class="predict-tokens" type="button">Predict Cost</button>
      </div>
    </div>
  </form>
</section>

<script>
  $(document).ready(() => {
    let section = $(".section-predict-tokens");
    section.find(".predict-tokens").click(function() {
      var client = new XYClient(function(client) {
        var etherToSend = client.toBigInt(section.find("[name='ether_to_send']").val());
        var tokensSold = client.toBigInt(section.find("[name='tokens_sold']").val()).shift(18);
        try {
          var contractFile = '/contracts/' + client.config.saleContractName + '.json';
          let contract = new XYContract(contractFile, (contract) => {
            try {
              let instance = contract.getInstance(client.getWeb3(), client.config.saleAddress);
              instance.predictTokensForEther(etherToSend, tokensSold, (error, result) => {
                if (error) {
                  $(".error-message").text(error);
                  console.error(error);
                } else {
                  console.log("Predicted Tokens: " + result.toString(10));
                  section.find(".predicted-tokens").html(result.shift(-18).toString(10));
                }
              });
            } catch (ex) {
              $(".error-message").text(ex.message);
              console.error(ex);
            }
          });
        } catch (ex) {
          $(".error-message").text(ex.message);
          console.error(ex);
        }

      });
    });
  });
</script>
